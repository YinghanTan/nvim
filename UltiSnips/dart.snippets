# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet stless "StatelessWidget" b
class 1 extends StatelessWidget {
	@override
		Widget build(BuildContext context) {
			return Container(
				$2
			);
		}
}
endsnippet

snippet wrap "Wrap with new widget"
$1(
	child: ${0:${VISUAL: widget...}}
),
endsnippet

snippet wColumn "Wrap with new Column"
Column(
	children: <Widget>[
		${0:${VISUAL: widgets...}}
	],
),
endsnippet
	
snippet wRow "Wrap with new Row"
Row(
	children: <Widget>[
		${0:${VISUAL: widgets...}}
	],
),
endsnippet

snippet wPad "Add Padding"
Padding(
	padding: const EdgeInsets.only,
	child: ${0:${VISUAL: widgets...}}
)
endsnippet

snippet wCent "Center widget"
Center(
	child: ${0:${VISUAL: widgets...}}
),
endsnippet
